{"ast":null,"code":"const USER_MAIN_DATA = [{\n  id: 12,\n  userInfos: {\n    firstName: \"Karlitooooooooo\",\n    lastName: \"Dovineau\",\n    age: 31\n  },\n  todayScore: 0.82,\n  keyData: {\n    calorieCount: 1930,\n    proteinCount: 155,\n    carbohydrateCount: 290,\n    lipidCount: 50\n  }\n}, {\n  id: 18,\n  userInfos: {\n    firstName: \"Cecile\",\n    lastName: \"Ratorez\",\n    age: 34\n  },\n  score: 0.3,\n  keyData: {\n    calorieCount: 2500,\n    proteinCount: 90,\n    carbohydrateCount: 150,\n    lipidCount: 120\n  }\n}];\nconst USER_ACTIVITY = [{\n  userId: 12,\n  sessions: [{\n    day: \"2020-07-01\",\n    kilogram: 80,\n    calories: 240\n  }, {\n    day: \"2020-07-02\",\n    kilogram: 80,\n    calories: 220\n  }, {\n    day: \"2020-07-03\",\n    kilogram: 81,\n    calories: 280\n  }, {\n    day: \"2020-07-04\",\n    kilogram: 81,\n    calories: 290\n  }, {\n    day: \"2020-07-05\",\n    kilogram: 80,\n    calories: 160\n  }, {\n    day: \"2020-07-06\",\n    kilogram: 78,\n    calories: 162\n  }, {\n    day: \"2020-07-07\",\n    kilogram: 76,\n    calories: 390\n  }]\n}, {\n  userId: 18,\n  sessions: [{\n    day: \"2020-07-01\",\n    kilogram: 70,\n    calories: 240\n  }, {\n    day: \"2020-07-02\",\n    kilogram: 69,\n    calories: 220\n  }, {\n    day: \"2020-07-03\",\n    kilogram: 70,\n    calories: 280\n  }, {\n    day: \"2020-07-04\",\n    kilogram: 70,\n    calories: 500\n  }, {\n    day: \"2020-07-05\",\n    kilogram: 69,\n    calories: 160\n  }, {\n    day: \"2020-07-06\",\n    kilogram: 69,\n    calories: 162\n  }, {\n    day: \"2020-07-07\",\n    kilogram: 69,\n    calories: 390\n  }]\n}];\nconst USER_AVERAGE_SESSIONS = [{\n  userId: 12,\n  sessions: [{\n    day: 1,\n    sessionLength: 30\n  }, {\n    day: 2,\n    sessionLength: 23\n  }, {\n    day: 3,\n    sessionLength: 45\n  }, {\n    day: 4,\n    sessionLength: 50\n  }, {\n    day: 5,\n    sessionLength: 0\n  }, {\n    day: 6,\n    sessionLength: 0\n  }, {\n    day: 7,\n    sessionLength: 60\n  }]\n}, {\n  userId: 18,\n  sessions: [{\n    day: 1,\n    sessionLength: 30\n  }, {\n    day: 2,\n    sessionLength: 40\n  }, {\n    day: 3,\n    sessionLength: 50\n  }, {\n    day: 4,\n    sessionLength: 30\n  }, {\n    day: 5,\n    sessionLength: 30\n  }, {\n    day: 6,\n    sessionLength: 50\n  }, {\n    day: 7,\n    sessionLength: 50\n  }]\n}];\nconst USER_PERFORMANCE = [{\n  userId: 12,\n  kind: {\n    1: \"cardio\",\n    2: \"energy\",\n    3: \"endurance\",\n    4: \"strength\",\n    5: \"speed\",\n    6: \"intensity\"\n  },\n  data: [{\n    value: 80,\n    kind: 1\n  }, {\n    value: 120,\n    kind: 2\n  }, {\n    value: 140,\n    kind: 3\n  }, {\n    value: 50,\n    kind: 4\n  }, {\n    value: 200,\n    kind: 5\n  }, {\n    value: 90,\n    kind: 6\n  }]\n}, {\n  userId: 18,\n  kind: {\n    1: \"cardio\",\n    2: \"energy\",\n    3: \"endurance\",\n    4: \"strength\",\n    5: \"speed\",\n    6: \"intensity\"\n  },\n  data: [{\n    value: 200,\n    kind: 1\n  }, {\n    value: 240,\n    kind: 2\n  }, {\n    value: 80,\n    kind: 3\n  }, {\n    value: 80,\n    kind: 4\n  }, {\n    value: 220,\n    kind: 5\n  }, {\n    value: 110,\n    kind: 6\n  }]\n}];\n\n/**\n * Class MockData to collect data\n * @param {number} id\n * @returns {object} res\n */\nexport default class MockData {}\nMockData.getInfos = async id => {\n  const res = USER_MAIN_DATA.find(el => el.id === parseInt(id));\n  return {\n    data: res\n  };\n};\nMockData.getActivity = async id => {\n  const res = USER_ACTIVITY.find(el => el.userId === parseInt(id));\n  return {\n    data: res\n  };\n};\nMockData.getPerformance = async id => {\n  const res = USER_PERFORMANCE.find(el => el.userId === parseInt(id));\n  return {\n    data: res\n  };\n};\nMockData.getAverageSessions = async id => {\n  const res = USER_AVERAGE_SESSIONS.find(el => el.userId === parseInt(id));\n  return {\n    data: res\n  };\n};","map":{"version":3,"names":["USER_MAIN_DATA","id","userInfos","firstName","lastName","age","todayScore","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","score","USER_ACTIVITY","userId","sessions","day","kilogram","calories","USER_AVERAGE_SESSIONS","sessionLength","USER_PERFORMANCE","kind","data","value","MockData","getInfos","res","find","el","parseInt","getActivity","getPerformance","getAverageSessions"],"sources":["C:/Users/frup88288/Desktop/OC/Sportsee-main (1)/Sportsee-main/front-end/src/data/mockdata.js"],"sourcesContent":["const USER_MAIN_DATA = [\n  {\n    id: 12,\n    userInfos: {\n      firstName: \"Karlitooooooooo\",\n      lastName: \"Dovineau\",\n      age: 31,\n    },\n    todayScore: 0.82,\n    keyData: {\n      calorieCount: 1930,\n      proteinCount: 155,\n      carbohydrateCount: 290,\n      lipidCount: 50,\n    },\n  },\n  {\n    id: 18,\n    userInfos: {\n      firstName: \"Cecile\",\n      lastName: \"Ratorez\",\n      age: 34,\n    },\n    score: 0.3,\n    keyData: {\n      calorieCount: 2500,\n      proteinCount: 90,\n      carbohydrateCount: 150,\n      lipidCount: 120,\n    },\n  },\n];\n\nconst USER_ACTIVITY = [\n  {\n    userId: 12,\n    sessions: [\n      {\n        day: \"2020-07-01\",\n        kilogram: 80,\n        calories: 240,\n      },\n      {\n        day: \"2020-07-02\",\n        kilogram: 80,\n        calories: 220,\n      },\n      {\n        day: \"2020-07-03\",\n        kilogram: 81,\n        calories: 280,\n      },\n      {\n        day: \"2020-07-04\",\n        kilogram: 81,\n        calories: 290,\n      },\n      {\n        day: \"2020-07-05\",\n        kilogram: 80,\n        calories: 160,\n      },\n      {\n        day: \"2020-07-06\",\n        kilogram: 78,\n        calories: 162,\n      },\n      {\n        day: \"2020-07-07\",\n        kilogram: 76,\n        calories: 390,\n      },\n    ],\n  },\n  {\n    userId: 18,\n    sessions: [\n      {\n        day: \"2020-07-01\",\n        kilogram: 70,\n        calories: 240,\n      },\n      {\n        day: \"2020-07-02\",\n        kilogram: 69,\n        calories: 220,\n      },\n      {\n        day: \"2020-07-03\",\n        kilogram: 70,\n        calories: 280,\n      },\n      {\n        day: \"2020-07-04\",\n        kilogram: 70,\n        calories: 500,\n      },\n      {\n        day: \"2020-07-05\",\n        kilogram: 69,\n        calories: 160,\n      },\n      {\n        day: \"2020-07-06\",\n        kilogram: 69,\n        calories: 162,\n      },\n      {\n        day: \"2020-07-07\",\n        kilogram: 69,\n        calories: 390,\n      },\n    ],\n  },\n];\n\nconst USER_AVERAGE_SESSIONS = [\n  {\n    userId: 12,\n    sessions: [\n      {\n        day: 1,\n        sessionLength: 30,\n      },\n      {\n        day: 2,\n        sessionLength: 23,\n      },\n      {\n        day: 3,\n        sessionLength: 45,\n      },\n      {\n        day: 4,\n        sessionLength: 50,\n      },\n      {\n        day: 5,\n        sessionLength: 0,\n      },\n      {\n        day: 6,\n        sessionLength: 0,\n      },\n      {\n        day: 7,\n        sessionLength: 60,\n      },\n    ],\n  },\n  {\n    userId: 18,\n    sessions: [\n      {\n        day: 1,\n        sessionLength: 30,\n      },\n      {\n        day: 2,\n        sessionLength: 40,\n      },\n      {\n        day: 3,\n        sessionLength: 50,\n      },\n      {\n        day: 4,\n        sessionLength: 30,\n      },\n      {\n        day: 5,\n        sessionLength: 30,\n      },\n      {\n        day: 6,\n        sessionLength: 50,\n      },\n      {\n        day: 7,\n        sessionLength: 50,\n      },\n    ],\n  },\n];\n\nconst USER_PERFORMANCE = [\n  {\n    userId: 12,\n    kind: {\n      1: \"cardio\",\n      2: \"energy\",\n      3: \"endurance\",\n      4: \"strength\",\n      5: \"speed\",\n      6: \"intensity\",\n    },\n    data: [\n      {\n        value: 80,\n        kind: 1,\n      },\n      {\n        value: 120,\n        kind: 2,\n      },\n      {\n        value: 140,\n        kind: 3,\n      },\n      {\n        value: 50,\n        kind: 4,\n      },\n      {\n        value: 200,\n        kind: 5,\n      },\n      {\n        value: 90,\n        kind: 6,\n      },\n    ],\n  },\n  {\n    userId: 18,\n    kind: {\n      1: \"cardio\",\n      2: \"energy\",\n      3: \"endurance\",\n      4: \"strength\",\n      5: \"speed\",\n      6: \"intensity\",\n    },\n    data: [\n      {\n        value: 200,\n        kind: 1,\n      },\n      {\n        value: 240,\n        kind: 2,\n      },\n      {\n        value: 80,\n        kind: 3,\n      },\n      {\n        value: 80,\n        kind: 4,\n      },\n      {\n        value: 220,\n        kind: 5,\n      },\n      {\n        value: 110,\n        kind: 6,\n      },\n    ],\n  },\n];\n\n/**\n * Class MockData to collect data\n * @param {number} id\n * @returns {object} res\n */\nexport default class MockData {\n  static getInfos = async (id) => {\n    const res = USER_MAIN_DATA.find((el) => el.id === parseInt(id));\n    return { data: res };\n  };\n\n  static getActivity = async (id) => {\n    const res = USER_ACTIVITY.find((el) => el.userId === parseInt(id));\n    return { data: res };\n  };\n\n  static getPerformance = async (id) => {\n    const res = USER_PERFORMANCE.find((el) => el.userId === parseInt(id));\n    return { data: res };\n  };\n\n  static getAverageSessions = async (id) => {\n    const res = USER_AVERAGE_SESSIONS.find((el) => el.userId === parseInt(id));\n    return { data: res };\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}